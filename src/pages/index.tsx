import type { NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import generateWorksheet from "@/util/generateWorksheet";
import Slider from "rc-slider";
import "rc-slider/assets/index.css";
import produce from "immer";
import Counter from "@/components/Counter";

const Home: NextPage = () => {
  const [additionWorksheetSettings, setAdditionWorksheetSettings] =
    useState<IAdditionWorksheetSettings>({
      numberOfDigits: {
        min: 2,
        max: 2,
      },
      numberOfItems: 15,
      numberOfOperands: 3,
    });
  const [additionWorksheetItems, setAdditionWorksheetItems] = useState<
    IAdditionWorksheetItem[]
  >([
    {
      operands: [1, 2],
      correctAnswer: 3,
    },
  ]);

  function setNumberOfOperands(
    additionWorkSheetSettings: IAdditionWorksheetSettings,
    numberOfOperands: number
  ) {
    return produce(additionWorkSheetSettings, (draft) => {
      draft.numberOfOperands = numberOfOperands;
    });
  }
  function setNumberOfDigits(
    additionWorkSheetSettings: IAdditionWorksheetSettings,
    minMax: number[]
  ) {
    return produce(additionWorkSheetSettings, (draft) => {
      draft.numberOfDigits = {
        min: minMax[0],
        max: minMax[1],
      };
    });
  }
  useEffect(() => {
    handleGenerateWorksheet();
  }, [additionWorksheetSettings]);

  function handleGenerateWorksheet() {
    setAdditionWorksheetItems(generateWorksheet(additionWorksheetSettings));
  }
  return (
    <div>
      <Head>
        <title>Solvit - Deliberate Math Practice Trainer!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="max-w-sm w-full">
          <h2>How many digits per operand?</h2>
          <Slider
            range
            allowCross={false}
            defaultValue={[
              additionWorksheetSettings.numberOfDigits.min,
              additionWorksheetSettings.numberOfDigits.max,
            ]}
            min={1}
            max={5}
            onChange={(values) => {
              if (Array.isArray(values)) {
                setAdditionWorksheetSettings(
                  setNumberOfDigits(additionWorksheetSettings, values)
                );
              }
            }}
          />
          <h2>How many operands?</h2>
          <Counter
            defaultValue={2}
            min={2}
            max={4}
            onChange={(value) => {
              setAdditionWorksheetSettings(
                setNumberOfOperands(additionWorksheetSettings, value)
              );
            }}
          />
        </div>
        <div>
          {additionWorksheetItems.map((worksheetItem, i) => (
            <div key={i}>
              {`${i + 1}) `}
              {worksheetItem.operands.map((operandItem, i) => (
                <span key={i}>
                  <span>{operandItem}</span>
                  {i < worksheetItem.operands.length - 1 && <span>+</span>}
                </span>
              ))}
              ={" "}
              <span className="text-transparent hover:text-white">
                {worksheetItem.correctAnswer}
              </span>
            </div>
          ))}
        </div>
        <button onClick={handleGenerateWorksheet}>Generate Worksheet</button>
      </main>

      <footer>Footer</footer>
    </div>
  );
};

export default Home;
